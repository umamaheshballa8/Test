<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="38" passed="36">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="52331" started-at="2021-12-07T17:19:47 IST" finished-at="2021-12-07T17:20:39 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="52331" started-at="2021-12-07T17:19:47 IST" finished-at="2021-12-07T17:20:39 IST">
      <class name="com.rsr.qa.testcases.SigninTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.rsr.qa.testcases.SigninTest@48a242ce]" name="setup" duration-ms="10195" started-at="2021-12-07T17:20:15 IST" finished-at="2021-12-07T17:20:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SigninTest@48a242ce]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:26 IST" finished-at="2021-12-07T17:20:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setup status=SUCCESS method=SigninTest.setup()[pri:0, instance:com.rsr.qa.testcases.SigninTest@48a242ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="clickinBut()[pri:1, instance:com.rsr.qa.testcases.SigninTest@48a242ce]" name="clickinBut" duration-ms="264" started-at="2021-12-07T17:20:26 IST" finished-at="2021-12-07T17:20:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickinBut -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SigninTest@48a242ce]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:26 IST" finished-at="2021-12-07T17:20:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickinBut status=SUCCESS method=SigninTest.clickinBut()[pri:1, instance:com.rsr.qa.testcases.SigninTest@48a242ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="loginTest()[pri:2, instance:com.rsr.qa.testcases.SigninTest@48a242ce]" name="loginTest" duration-ms="1064" started-at="2021-12-07T17:20:26 IST" finished-at="2021-12-07T17:20:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SigninTest@48a242ce]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:27 IST" finished-at="2021-12-07T17:20:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=SigninTest.loginTest()[pri:2, instance:com.rsr.qa.testcases.SigninTest@48a242ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
      </class> <!-- com.rsr.qa.testcases.SigninTest -->
      <class name="com.rsr.qa.testcases.ApplicationConfigurationTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="setup" duration-ms="8" started-at="2021-12-07T17:20:29 IST" finished-at="2021-12-07T17:20:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:29 IST" finished-at="2021-12-07T17:20:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setup status=SUCCESS method=ApplicationConfigurationTest.setup()[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="FAIL" signature="AppConfigModule()[pri:3, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="AppConfigModule" duration-ms="1219" started-at="2021-12-07T17:20:29 IST" finished-at="2021-12-07T17:20:30 IST">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a href="/application-configuration">...</a> is not clickable at point (119, 181). Other element would receive the click: <div class="ReactModal__Overlay ReactModal__Overlay--after-open" style="position: fixed; inset: 0px; background-color: rgba(255, 255, 255, 0.75);">...</div>
  (Session info: chrome=96.0.4664.45)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-BG3KCPN', ip: '192.168.1.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:56600}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: dfb711fe7edacb1f05dd4f70c16398ad]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a href="/application-configuration">...</a> is not clickable at point (119, 181). Other element would receive the click: <div class="ReactModal__Overlay ReactModal__Overlay--after-open" style="position: fixed; inset: 0px; background-color: rgba(255, 255, 255, 0.75);">...</div>
  (Session info: chrome=96.0.4664.45)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-BG3KCPN', ip: '192.168.1.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:56600}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: dfb711fe7edacb1f05dd4f70c16398ad
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy9.click(Unknown Source)
at com.rsr.qa.pages.ApplicationConfiguration.AppConfig(ApplicationConfiguration.java:81)
at com.rsr.qa.testcases.ApplicationConfigurationTest.AppConfigModule(ApplicationConfigurationTest.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppConfigModule -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="377" started-at="2021-12-07T17:20:30 IST" finished-at="2021-12-07T17:20:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AppConfigModule status=FAILURE method=ApplicationConfigurationTest.AppConfigModule()[pri:3, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="ListOfDomainNames()[pri:4, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="ListOfDomainNames" duration-ms="4251" started-at="2021-12-07T17:20:30 IST" finished-at="2021-12-07T17:20:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ListOfDomainNames -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:35 IST" finished-at="2021-12-07T17:20:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ListOfDomainNames status=SUCCESS method=ApplicationConfigurationTest.ListOfDomainNames()[pri:4, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="SMTP_Server_Host()[pri:5, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="SMTP_Server_Host" duration-ms="309" started-at="2021-12-07T17:20:35 IST" finished-at="2021-12-07T17:20:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMTP_Server_Host -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:35 IST" finished-at="2021-12-07T17:20:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SMTP_Server_Host status=SUCCESS method=ApplicationConfigurationTest.SMTP_Server_Host()[pri:5, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="SMTP_Server_Port()[pri:6, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="SMTP_Server_Port" duration-ms="419" started-at="2021-12-07T17:20:35 IST" finished-at="2021-12-07T17:20:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMTP_Server_Port -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:35 IST" finished-at="2021-12-07T17:20:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SMTP_Server_Port status=SUCCESS method=ApplicationConfigurationTest.SMTP_Server_Port()[pri:6, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="ReviewerScopeMailerId()[pri:7, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="ReviewerScopeMailerId" duration-ms="399" started-at="2021-12-07T17:20:35 IST" finished-at="2021-12-07T17:20:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReviewerScopeMailerId -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:36 IST" finished-at="2021-12-07T17:20:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReviewerScopeMailerId status=SUCCESS method=ApplicationConfigurationTest.ReviewerScopeMailerId()[pri:7, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="ReviewerScopeMailerPassword()[pri:8, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="ReviewerScopeMailerPassword" duration-ms="330" started-at="2021-12-07T17:20:36 IST" finished-at="2021-12-07T17:20:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReviewerScopeMailerPassword -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:36 IST" finished-at="2021-12-07T17:20:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReviewerScopeMailerPassword status=SUCCESS method=ApplicationConfigurationTest.ReviewerScopeMailerPassword()[pri:8, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="AdminUserEmail()[pri:9, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="AdminUserEmail" duration-ms="375" started-at="2021-12-07T17:20:36 IST" finished-at="2021-12-07T17:20:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdminUserEmail -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:37 IST" finished-at="2021-12-07T17:20:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdminUserEmail status=SUCCESS method=ApplicationConfigurationTest.AdminUserEmail()[pri:9, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="Question_Query_params()[pri:10, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="Question_Query_params" duration-ms="388" started-at="2021-12-07T17:20:37 IST" finished-at="2021-12-07T17:20:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Question_Query_params -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:37 IST" finished-at="2021-12-07T17:20:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Question_Query_params status=SUCCESS method=ApplicationConfigurationTest.Question_Query_params()[pri:10, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="File_upload_Query_params()[pri:11, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="File_upload_Query_params" duration-ms="830" started-at="2021-12-07T17:20:37 IST" finished-at="2021-12-07T17:20:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- File_upload_Query_params -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:38 IST" finished-at="2021-12-07T17:20:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=File_upload_Query_params status=SUCCESS method=ApplicationConfigurationTest.File_upload_Query_params()[pri:11, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="Output_files_list()[pri:12, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="Output_files_list" duration-ms="1114" started-at="2021-12-07T17:20:38 IST" finished-at="2021-12-07T17:20:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Output_files_list -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:39 IST" finished-at="2021-12-07T17:20:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Output_files_list status=SUCCESS method=ApplicationConfigurationTest.Output_files_list()[pri:12, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="SubmitButton()[pri:13, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="SubmitButton" duration-ms="96" started-at="2021-12-07T17:20:39 IST" finished-at="2021-12-07T17:20:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitButton -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:39 IST" finished-at="2021-12-07T17:20:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SubmitButton status=SUCCESS method=ApplicationConfigurationTest.SubmitButton()[pri:13, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="CloseSavedDataPopup()[pri:14, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="CloseSavedDataPopup" duration-ms="188" started-at="2021-12-07T17:20:39 IST" finished-at="2021-12-07T17:20:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseSavedDataPopup -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:39 IST" finished-at="2021-12-07T17:20:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CloseSavedDataPopup status=SUCCESS method=ApplicationConfigurationTest.CloseSavedDataPopup()[pri:14, instance:com.rsr.qa.testcases.ApplicationConfigurationTest@4f51b3e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
      </class> <!-- com.rsr.qa.testcases.ApplicationConfigurationTest -->
      <class name="com.rsr.qa.testcases.userinfopageTest">
        <test-method status="PASS" signature="setup()[pri:1, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="setup" duration-ms="10" started-at="2021-12-07T17:20:27 IST" finished-at="2021-12-07T17:20:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:27 IST" finished-at="2021-12-07T17:20:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setup status=SUCCESS method=userinfopageTest.setup()[pri:1, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="UserInfoBaseTest1()[pri:2, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="UserInfoBaseTest1" duration-ms="572" started-at="2021-12-07T17:20:27 IST" finished-at="2021-12-07T17:20:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserInfoBaseTest1 -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:27 IST" finished-at="2021-12-07T17:20:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserInfoBaseTest1 status=SUCCESS method=userinfopageTest.UserInfoBaseTest1()[pri:2, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="UserInfoBaseTest11()[pri:3, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="UserInfoBaseTest11" duration-ms="131" started-at="2021-12-07T17:20:27 IST" finished-at="2021-12-07T17:20:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserInfoBaseTest11 -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="captureScreen" is-config="true" duration-ms="2" started-at="2021-12-07T17:20:28 IST" finished-at="2021-12-07T17:20:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserInfoBaseTest11 status=SUCCESS method=userinfopageTest.UserInfoBaseTest11()[pri:3, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="AdminUserLogin()[pri:4, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="AdminUserLogin" duration-ms="1100" started-at="2021-12-07T17:20:28 IST" finished-at="2021-12-07T17:20:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdminUserLogin -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:29 IST" finished-at="2021-12-07T17:20:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdminUserLogin status=SUCCESS method=userinfopageTest.AdminUserLogin()[pri:4, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="confirencruser()[pri:5, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="confirencruser" duration-ms="93" started-at="2021-12-07T17:20:29 IST" finished-at="2021-12-07T17:20:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirencruser -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4]" name="captureScreen" is-config="true" duration-ms="2" started-at="2021-12-07T17:20:29 IST" finished-at="2021-12-07T17:20:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirencruser status=SUCCESS method=userinfopageTest.confirencruser()[pri:5, instance:com.rsr.qa.testcases.userinfopageTest@1e4a7dd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
      </class> <!-- com.rsr.qa.testcases.userinfopageTest -->
      <class name="com.rsr.qa.testcases.SignUpTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="setup" duration-ms="12992" started-at="2021-12-07T17:19:47 IST" finished-at="2021-12-07T17:20:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="4" started-at="2021-12-07T17:20:00 IST" finished-at="2021-12-07T17:20:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setup status=SUCCESS method=SignUpTest.setup()[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="signupbutton()[pri:1, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="signupbutton" duration-ms="292" started-at="2021-12-07T17:20:00 IST" finished-at="2021-12-07T17:20:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupbutton -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:01 IST" finished-at="2021-12-07T17:20:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupbutton status=SUCCESS method=SignUpTest.signupbutton()[pri:1, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="FirstName()[pri:2, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="FirstName" duration-ms="437" started-at="2021-12-07T17:20:01 IST" finished-at="2021-12-07T17:20:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstName -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:01 IST" finished-at="2021-12-07T17:20:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FirstName status=SUCCESS method=SignUpTest.FirstName()[pri:2, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="LastName()[pri:3, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="LastName" duration-ms="461" started-at="2021-12-07T17:20:01 IST" finished-at="2021-12-07T17:20:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LastName -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:02 IST" finished-at="2021-12-07T17:20:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LastName status=SUCCESS method=SignUpTest.LastName()[pri:3, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="OrganizationName()[pri:4, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="OrganizationName" duration-ms="584" started-at="2021-12-07T17:20:02 IST" finished-at="2021-12-07T17:20:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrganizationName -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:02 IST" finished-at="2021-12-07T17:20:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OrganizationName status=SUCCESS method=SignUpTest.OrganizationName()[pri:4, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="Phone()[pri:5, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="Phone" duration-ms="634" started-at="2021-12-07T17:20:02 IST" finished-at="2021-12-07T17:20:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Phone -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:03 IST" finished-at="2021-12-07T17:20:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Phone status=SUCCESS method=SignUpTest.Phone()[pri:5, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="EmailAddress()[pri:6, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="EmailAddress" duration-ms="434" started-at="2021-12-07T17:20:03 IST" finished-at="2021-12-07T17:20:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmailAddress -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:03 IST" finished-at="2021-12-07T17:20:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmailAddress status=SUCCESS method=SignUpTest.EmailAddress()[pri:6, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="Password()[pri:7, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="Password" duration-ms="287" started-at="2021-12-07T17:20:03 IST" finished-at="2021-12-07T17:20:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Password -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Password status=SUCCESS method=SignUpTest.Password()[pri:7, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="CPassword()[pri:8, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="CPassword" duration-ms="287" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CPassword -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CPassword status=SUCCESS method=SignUpTest.CPassword()[pri:8, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="CName()[pri:9, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="CName" duration-ms="284" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CName -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CName status=SUCCESS method=SignUpTest.CName()[pri:9, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="CUrl()[pri:11, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="CUrl" duration-ms="86" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CUrl -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CUrl status=SUCCESS method=SignUpTest.CUrl()[pri:11, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="RoleInConference()[pri:12, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="RoleInConference" duration-ms="408" started-at="2021-12-07T17:20:04 IST" finished-at="2021-12-07T17:20:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RoleInConference -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="2" started-at="2021-12-07T17:20:05 IST" finished-at="2021-12-07T17:20:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RoleInConference status=SUCCESS method=SignUpTest.RoleInConference()[pri:12, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="SSS()[pri:18, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="SSS" duration-ms="340" started-at="2021-12-07T17:20:05 IST" finished-at="2021-12-07T17:20:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SSS -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:05 IST" finished-at="2021-12-07T17:20:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SSS status=SUCCESS method=SignUpTest.SSS()[pri:18, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="radiobutton()[pri:20, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="radiobutton" duration-ms="62" started-at="2021-12-07T17:20:05 IST" finished-at="2021-12-07T17:20:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radiobutton -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="2" started-at="2021-12-07T17:20:05 IST" finished-at="2021-12-07T17:20:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=radiobutton status=SUCCESS method=SignUpTest.radiobutton()[pri:20, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="FAIL" signature="ReCapthabut()[pri:21, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="ReCapthabut" duration-ms="1362" started-at="2021-12-07T17:20:05 IST" finished-at="2021-12-07T17:20:06 IST">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (630, 692)
  (Session info: chrome=96.0.4664.45)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-BG3KCPN', ip: '192.168.1.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:56551}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e1af3eef62aea0a24d3ae3e8113fb8c6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (630, 692)
  (Session info: chrome=96.0.4664.45)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-BG3KCPN', ip: '192.168.1.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:56551}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e1af3eef62aea0a24d3ae3e8113fb8c6
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.rsr.qa.pages.SignUpPage.rC(SignUpPage.java:302)
at com.rsr.qa.testcases.SignUpTest.ReCapthabut(SignUpTest.java:224)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReCapthabut -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="1797" started-at="2021-12-07T17:20:06 IST" finished-at="2021-12-07T17:20:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReCapthabut status=FAILURE method=SignUpTest.ReCapthabut()[pri:21, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="signup()[pri:26, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="signup" duration-ms="6377" started-at="2021-12-07T17:20:08 IST" finished-at="2021-12-07T17:20:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="1" started-at="2021-12-07T17:20:15 IST" finished-at="2021-12-07T17:20:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signup status=SUCCESS method=SignUpTest.signup()[pri:26, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
        <test-method status="PASS" signature="HomePage()[pri:27, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="HomePage" duration-ms="702" started-at="2021-12-07T17:20:15 IST" finished-at="2021-12-07T17:20:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomePage -->
        <test-method status="PASS" signature="captureScreen(org.testng.ITestResult)[pri:0, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c]" name="captureScreen" is-config="true" duration-ms="0" started-at="2021-12-07T17:20:15 IST" finished-at="2021-12-07T17:20:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HomePage status=SUCCESS method=SignUpTest.HomePage()[pri:27, instance:com.rsr.qa.testcases.SignUpTest@6dde5c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreen -->
      </class> <!-- com.rsr.qa.testcases.SignUpTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
